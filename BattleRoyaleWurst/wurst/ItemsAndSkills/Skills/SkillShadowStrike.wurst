package SkillShadowStrike

import SkillGeneration
import initlater RuntimeInitialize
import ClosureTimers
import StandardTextTags

public constant SKILL_SHADOW_STRIKE = compiletime(newSkill("Shadow Strike", 5, false))

constant ABILITY_SHADOW_STRIKE = compiletime(ABIL_ID_GEN.next())
constant BUFF_SHADOW_STRIKE = new BuffType(ABILITY_SHADOW_STRIKE, "shadowstrike", 'BEsh', false, true)

@compiletime
public function setupShadowStrike()
    real initialDmg = 250
    real dotDmg = 100
    real dur = 4.5
    if compiletime
        SKILL_SHADOW_STRIKE.getSkillObject()
            ..setDescription("Hurls a poisoned dagger which deals "+initialDmg.toInt().toString()+" initial damage, and then deals "+dotDmg.toInt().toString()+" damage per second for "+dur.toInt().toString()+" seconds.")
            ..setIcon(Icons.bTNShadowStrike)
            ..setManaCost(0)
            ..setRange(500)
            ..setTargetType(CHANNEL_POINT_TARGET)
        new AbilityDefinitionWardenShadowStrike(ABILITY_SHADOW_STRIKE)
            ..setDummySkill()
            ..setDecayingDamage(1, 0)
            ..setInitialDamage(1, 0)
            ..setCastingTime(1, 30)

    else
        SKILL_SHADOW_STRIKE.attachCode( (unit caster, unit _target, vec2 pos) -> (begin
            new Missile(caster, caster.getPos3with(80), 800, caster.getPos().angleTo(pos), Abilities.shadowStrikeMissile)
                ..setReflectFunction( defaultReflect )
                ..hitOnce()
                ..setMaxRange(600)
                ..setHitCondition((Missile missile, unit missileTarget) -> (begin
                    return missileTarget.isTargetable(missile.getOwner().getOwner(), false, true)
                end) )
                ..setHitFunction( (Missile missile, unit missileTarget) -> (begin
                    caster.damageTarget(missileTarget, initialDmg)
                    createShadowStrikeTextTag(missileTarget, initialDmg.toInt(), true)
                    new Buff(missileTarget, caster, dur, BUFF_SHADOW_STRIKE, 1)
                    doPeriodically(1.5, (CallbackPeriodic cb) -> (begin
                        if not BuffList.hasBuffType(missileTarget, BUFF_SHADOW_STRIKE)
                            destroy cb
                        else
                            caster.damageTarget(missileTarget, dotDmg)
                            createShadowStrikeTextTag(missileTarget, dotDmg.toInt(), false)
                    end) )
                    missile.destr()
                end))
            debugPrint("stormbolt")
        end))

    